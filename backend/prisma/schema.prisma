// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User Table
model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String // hashed with bcrypt, not plain text
  name       String?
  status     UserStatus @default(AVAILABLE)
  visibility Boolean    @default(true)
  trustScore Decimal    @default(0.0)
  interestTags String[] @default([])
  createdAt  DateTime   @default(now())

  // Relations
  messagesSent   Message[] @relation("SentMessages")
  messagesRecv   Message[] @relation("ReceivedMessages")
  wavesSent      Wave[]    @relation("WavesSent")
  wavesRecv      Wave[]    @relation("WavesReceived")
  reportsMade    Report[]  @relation("ReportsMade")
  reportsAgainst Report[]  @relation("ReportsAgainst")
}

enum UserStatus {
  AVAILABLE
  BUSY
  DND
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  createdAt  DateTime @default(now())
  senderId   Int
  receiverId Int
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
}

model Wave {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  senderId   Int
  receiverId Int
  sender     User     @relation("WavesSent", fields: [senderId], references: [id])
  receiver   User     @relation("WavesReceived", fields: [receiverId], references: [id])
}

model Report {
  id         Int      @id @default(autoincrement())
  reason     String
  createdAt  DateTime @default(now())
  reporterId Int
  reportedId Int
  reporter   User     @relation("ReportsMade", fields: [reporterId], references: [id])
  reported   User     @relation("ReportsAgainst", fields: [reportedId], references: [id])
}
